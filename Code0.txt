
Arduino Code:
bool playerOne_rock, playerTwo_rock;
bool playerOne_paper, playerTwo_paper;
bool playerOne_scizzors, playerTwo_scizzors;
bool playerOne_choice, playerTwo_choice;
bool playerOne_win, playerTwo_win;

int led = 13; // LED_BUILTIN;
int led_playerOne_lost = LED_BUILTIN;
int timer = 0;

void Main() {

    if (!playerOne_win) {
      digitalWrite(13, HIGH);
      // digitalWrite(led, LOW);
    } else {
      digitalWrite(13, LOW);
      // digitalWrite(led, HIGH);
    }


    playerOne_rock = false;
    playerTwo_rock = false;
    
    playerTwo_paper = false;
    playerOne_paper = false;
    
    playerOne_scizzors = false;
    playerTwo_scizzors = false;
    
    int _playerOne_choice = random(2); // Rock: (Button) 1, Paper: (Button) 2, Scizzors: (Button) 3
    int _playerTwo_choice = random(2);

    playerOne_choice = floor(_playerOne_choice);
    playerTwo_choice = floor(_playerTwo_choice);   
   
    playerOne_win = false;
    playerTwo_win = false;

    if (playerOne_choice == 0)
        playerOne_rock = true;
    else if  (playerOne_choice == 1)
        playerOne_paper = true;
    else if  (playerOne_choice == 2)
        playerOne_scizzors = true;
    
    if (playerTwo_choice == 0)
        playerTwo_rock = true;
    else if (playerTwo_choice == 1)
        playerTwo_paper = true;
    else if (playerTwo_choice == 2)
        playerTwo_scizzors = true;

    if (playerTwo_choice != playerOne_choice)
        if (playerOne_rock and playerTwo_paper)  
            playerOne_win = true;
        else if (playerOne_paper and playerTwo_rock)
            playerOne_win = true;
        else if (playerOne_scizzors and playerTwo_paper)
            playerOne_win = true;
        else
            playerOne_win = false;
    // else
       // printf "\n TIE"

    
    if (playerOne_win) {
        digitalWrite(led, HIGH);
        // print "\n PLAYER ONE WINS!"
        Serial.print("PLAYER ONE WINS!");
    } else if (playerOne_win and playerTwo_win) {
        // print "\n PLAYER ONE & PLAYER TWO WINS!"
        Serial.print("PLAYER ONE & PLAYER TWO WINS");
    } else if (playerTwo_win) {
          // print "\n PLAYER TWO WINS!"
          digitalWrite(led, LOW);
          Serial.print("PLAYER TWO WINS");
    } else {
          // print "Issue"
          digitalWrite(led, LOW);
          Serial.println("Issue");
    }
    
}   

void setup() {
  Serial.begin(9600);

      pinMode(13, OUTPUT);
}

void loop() {

  Main();
  delay(2000);
  
  /*
   if (timer > 40000) {
    Main();
    timer = 0;
  } else {
    timer+=1;
  }
  */
   
}
_______

// Debugging Function (Sketch)
int seconds;

void debug() {
  int debugLED; // Displays output to ensure the sketch is running
   debugLED = LED_BUILTIN;
   pinMode(debugLED, OUTPUT);

   digitalWrite(debugLED, HIGH);
   delay(500);
   digitalWrite(debugLED, LOW);
   delay(500);
}

_______

Brainfuck Code:
Program prints 5 down to 1 with a new~line in between
++ [ > +++++ < -] Loops to Ten (ten means newLine)
>> +++++ [ > +++++ [ > ++ < - ] < -] >> +++. Increment 53 & print (5) 
[<<<. >>> -. <<<. >>> -. <<<. >>> -. <<<. >>> -. <<<. >>> -. >] (4,3,2,1,0)


Javascript Code:

var health_xpos = 40;
var health_ypos = 40;
var health = 100; 
var health_height = 20; // can be the width or the height 
var health_width = health; // can be the width or the height
function drawHealth() {
	
	// Background 
	context.beginPath();
	context.fillStyle="red";
	context.rect(health_xpos, health_ypos, health_width, health_height);
	context.fill();
	context.closePath();
	
	// Foreground
	context.beginPath();
	context.fillStyle="green";
	context.rect(health_xpos, health_ypos, health, health_height);
	context.fill();
	context.closePath();
	
	// Outline
	context.beginPath();
	context.lineWidth="5";
	context.strokeStyle="black";
	context.rect(health_xpos, health_ypos, health_width, health_height);
	context.stroke();
	context.closePath();
	
	if (health <= 0) health = 0; // Stop health depleting too low
}

PHP Code:

<!DOCTYPE html>
<html>
    <style>
        
        a:link {
            text-decoration:none;
            color: black;
        }
        a:hover {
            color: blue;
        }
        
    </style>
    <head>
        <?php
            $languages = array();
            
            array_push($languages, "Arduino");
            array_push($languages, "Brainfuck");
            array_push($languages, "Javascript");
            array_push($languages, "PHP");
            
            sort($languages); // Orders alphabetically
            
            foreach ($languages as $lang) {
                print '<a href="#"><li>'. $lang.'</a></li>';
            }
        ?>
    </head>
</html>

